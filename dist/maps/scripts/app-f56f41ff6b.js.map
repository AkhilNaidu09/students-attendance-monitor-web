{"version":3,"sources":["scripts/app-f56f41ff6b.js"],"names":["angular","module","UserRegistrationController","$rootScope","$state","userRegistrationService","vm","this","error","clearError","userRegistration","data","fullName","email","password","Upwd","addUser","result","go","$http","arg","callback","post","then","response","catch","component","controller","controllerAs","templateUrl","service","postMessage","number","msg","url","res","err","console","log","getData","classId","get","posRes","sendReport","list","StudentsListController","studentsListService","$stateParams","selectedStudentId","message","success","studentListForm","$onInit","length","selectedUsers","formSub","absenties","class","i","ReportsController","$log","tableData","report","subject","totalNumberOfclasses","attendedclasses","getReport","rollnumber","checkCredentials","token","localStorage","currentUser","defaults","headers","common","Authorization","LoginController","loginservice","login","Uname","HomeController","FileUploadController","Upload","$window","$scope","submit","file","upload1","upload","resp","error_code","alert","config","name","status","evt","progressPercentage","parseInt","loaded","total","progress","ClassListController","classes","secId","selectedClassId","getStudents","AppNavController","selectedNavIndex","makeActvie","index","addStudent","addStudentController","addStudentService","depts","emergencyContact","EmegencyNumber","firstName","firstname","secondName","secondname","department","rollNumber","mailId","Contact","contactnumber","runBlock","$document","tmhDynamicLocale","$on","event","set","language","documentElement","setAttribute","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","params","otherwise","constant","configBlock","$locationProvider","$logProvider","$translateProvider","tmhDynamicLocaleProvider","html5Mode","debugEnabled","useStaticFilesLoader","prefix","suffix","preferredLanguage","fallbackLanguage","useSanitizeValueStrategy","useMissingTranslationHandlerLog","localeLocationPattern","defaultLocale","AppController","$templateCache","put"],"mappings":"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","file":"../../scripts/app-f56f41ff6b.js","sourcesContent":["\r\n    \r\n       \r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n    'pascalprecht.translate',\r\n    'tmh.dynamicLocale',\r\n    'ui.router',\r\n    'ngFileUpload',\r\n    'checklist-model'\r\n\r\n  ]);\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .component('userRegistration', {\r\n            controller: UserRegistrationController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'app/user-registration/user-registration.view.html',\r\n        })\r\n        .controller('UserRegistrationController', UserRegistrationController)\r\n        .service('userRegistrationService', userRegistrationService);\r\n\r\n    /** @ngInject */\r\n    function UserRegistrationController($rootScope, $state, userRegistrationService) {\r\n        var vm = this;\r\n\r\n        // view model variables will go here\r\n        vm.error = null;\r\n\r\n        //function hooks used in html \r\n        vm.clearError = clearError;\r\n        vm.userRegistration = userRegistration;\r\n\r\n        //var internal use will go here\r\n\r\n        function userRegistration() {\r\n            var data = {\r\n                'fullName': vm.fullName,\r\n                'email': vm.email,\r\n                'password': vm.Upwd\r\n            }\r\n\r\n            userRegistrationService.addUser(data, function (result) {\r\n                if (result === true) {\r\n                    $state.go('login');\r\n                } else {\r\n                    vm.error = 'Username is already Registered';\r\n                    //vm.loading = false;\r\n                    \r\n                }\r\n            });\r\n        }\r\n\r\n        function clearError() {\r\n            vm.error = null;\r\n        }\r\n    }\r\n    function userRegistrationService($http) {\r\n\r\n        this.addUser = function (arg, callback) {\r\n            return $http.post('http://localhost:3000/auth/register', arg)\r\n                .then(function (response) {\r\n                   \r\n                    callback(true);\r\n                    // login successful if there's a token in the response\r\n                    // if (response) {\r\n                    //     // store username and token in local storage to keep user logged in between page refreshes\r\n                    //             console.log(response.data);\r\n                    //     // execute callback with true to indicate successful login\r\n                    //     callback(true);\r\n\r\n                    // } else {\r\n                    //     // execute callback with false to indicate failed login\r\n                    //     callback(false);\r\n                    //     console.log(response);   \r\n\r\n                    // }\r\n                },\r\n                function (error) {\r\n                   \r\n                    callback(false);\r\n                })\r\n                .catch(function (error) {\r\n\r\n                    \r\n                });\r\n\r\n\r\n        }\r\n    }\r\n\r\n})();\r\n\nangular.module('app').service(\"studentsListService\", function ($http) {\r\n    this.postMessage = function (number, msg) {\r\n        var url=\"https://smsapi.engineeringtgr.com/send/?Mobile=7799887550&Password=7799887550&Message=\"+msg+\"&To=7799887550&Key=ankilW7YKnUFGq1Vt43EAvNf\";\r\n        return $http.post(url)\r\n            .then(function (res) {\r\n\r\n                return res;\r\n                console.log(res);\r\n            }\r\n            ).catch(function (err) {\r\n                console.log(err);\r\n                return err;\r\n            })\r\n\r\n    }\r\n    this.getData = function (classId) {\r\n\r\n        return $http.get(\"http://localhost:3000/studentsList/\" + classId)\r\n            .then(function (posRes) {\r\n                return posRes.data;\r\n            }).catch(function (err) {\r\n                return err;\r\n            })\r\n\r\n\r\n    }\r\n    this.sendReport= function(list){\r\n        var url=\"http://localhost:3000/report/\";\r\n        return $http.post(url,list)\r\n            .then(function (res) {\r\n\r\n                return res;\r\n                console.log(res);\r\n            }\r\n            ).catch(function (err) {\r\n                console.log(err);\r\n                return err;\r\n            })\r\n\r\n\r\n    }\r\n});\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('app').component('studentsList', {\r\n    controller: StudentsListController,\r\n    controllerAs: 'vm',\r\n    templateUrl: 'app/students-list/students-list.view.html',\r\n  }).controller(\"StudentsListController\", StudentsListController);\r\n\r\n  /** @ngInject */\r\n  function StudentsListController(studentsListService, $stateParams) {\r\n    var vm = this;\r\n    vm.selectedStudentId = null;\r\n    vm.message = '';\r\n    vm.success = false;\r\n    vm.studentListForm = true;\r\n    var classId ='';\r\n    vm.$onInit = $onInit;\r\n\r\n    function $onInit() {\r\n       classId = $stateParams.classId;\r\n      vm.studentListForm = true;\r\n      studentsListService.getData(classId).then(function (data) {\r\n        vm.result = data;\r\n        if (vm.result.length == 0)\r\n          vm.error = true;\r\n\r\n\r\n        vm.selectedUsers =[];\r\n      });\r\n    }\r\n\r\n    vm.formSub = function () {\r\n      var absenties={\r\n        \"class\":classId,\r\n        \"absenties\":vm.selectedUsers\r\n      };\r\n      var res = studentsListService.sendReport(absenties);\r\n      console.log(res);\r\n      for (var i = 0; i < vm.selectedUsers.length; i++) {\r\n        var res = studentsListService.postMessage(vm.selectedUsers[i], vm.message);\r\n        console.log(res);\r\n      }\r\n      vm.studentListForm = false;\r\n      vm.success = true;\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('app').component('reports', {\r\n        controller: ReportsController,\r\n        controllerAs: 'vm',\r\n        templateUrl: 'app/reports/reports.view.html',\r\n    });\r\n\r\n    /** @ngInject */\r\n    function ReportsController($log) {\r\n        var vm = this;\r\n        vm.tableData = null;\r\n        vm.report = [\r\n            {\r\n                subject: 'LP',\r\n                totalNumberOfclasses: '50',\r\n                attendedclasses: '40'\r\n            }, {\r\n                subject: 'CC',\r\n                totalNumberOfclasses: '45',\r\n                attendedclasses: '35'\r\n            }, {\r\n                subject: 'DWDM',\r\n                totalNumberOfclasses: '38',\r\n                attendedclasses: '30'\r\n            }, {\r\n                subject: 'DP',\r\n                totalNumberOfclasses: '43',\r\n                attendedclasses: '40'\r\n            }, {\r\n                subject: 'AI',\r\n                totalNumberOfclasses: '40',\r\n                attendedclasses: '35'\r\n            }, {\r\n                subject: 'MC',\r\n                totalNumberOfclasses: '40',\r\n                attendedclasses: '35'\r\n            }, {\r\n                subject: 'LP LAB',\r\n                totalNumberOfclasses: '50',\r\n                attendedclasses: '45'\r\n            }, {\r\n                subject: 'DWDM LAB',\r\n                totalNumberOfclasses: '50',\r\n                attendedclasses: '42'\r\n            }\r\n\r\n        ];\r\n        vm.error = null;\r\n        vm.getReport = getReport;\r\n        vm.clearError = clearError;\r\n\r\n        function getReport() {\r\n            \r\n            if (vm.rollnumber == '14n81a0598' || vm.rollnumber == '14n81a0599' || vm.rollnumber == '14n81a05a0' || vm.rollnumber == '14n81a05a1')\r\n            {\r\n                vm.tableData=true;\r\n\r\n            }\r\n            else{\r\n                vm.error='invalid rollnumber';\r\n                vm.tableData=null;\r\n            }\r\n\r\n\r\n        }\r\n        function clearError() {\r\n            vm.error = null;\r\n            vm.tableData = null;\r\n\r\n        }\r\n\r\n        // Scope variables go here:\r\n        // vm.variable = 'value'\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    /** @ngInject */\r\n\r\n    angular\r\n        .module('app')\r\n        .service('loginservice', function ($http) {\r\n            this.checkCredentials = function (arg, callback) {\r\n                return $http.post('http://localhost:3000/auth/sign_in', arg)\r\n                    .then(function (response) {\r\n                        // login successful if there's a token in the response\r\n                        if (response.data.token) {\r\n                            // store username and token in local storage to keep user logged in between page refreshes\r\n                            localStorage.currentUser = { token: response.data.token };\r\n\r\n                            // add jwt token to auth header for all requests made by the $http service\r\n                            $http.defaults.headers.common.Authorization = 'Bearer ' + response.data.token;\r\n\r\n                            // execute callback with true to indicate successful login\r\n                            callback(true);\r\n\r\n                        } else {\r\n                            // execute callback with false to indicate failed login\r\n                            callback(false);\r\n\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        callback(false);\r\n                    });\r\n\r\n            }\r\n\r\n        });\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .component('login', {\r\n            controller: LoginController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'app/login/login.view.html',\r\n        })\r\n        .controller('LoginController', LoginController);\r\n\r\n    /** @ngInject */\r\n    function LoginController($rootScope, $state, loginservice) {\r\n        var vm = this;\r\n\r\n        // view model variables will go here\r\n        vm.error = null;\r\n\r\n        //function hooks used in html \r\n        vm.clearError = clearError;\r\n        vm.login = login;\r\n\r\n        //var internal use will go here\r\n\r\n        function login() {\r\n            var data = {\r\n                'email': vm.Uname,\r\n                'password': vm.Upwd\r\n            }\r\n            loginservice.checkCredentials(data, function (result) {\r\n                if (result === true) {\r\n                    $state.go('app.home');\r\n                } else {\r\n                    // vm.error = 'Username or password is incorrect';\r\n                    //vm.loading = false;\r\n                    vm.error = \"Username or password is incorrect\";\r\n                }\r\n            });\r\n        };\r\n\r\n        function clearError(){\r\n            vm.error = null;\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app').component('home', {\r\n    controller: HomeController,\r\n    controllerAs: 'vm',\r\n    templateUrl: 'app/home/home.view.html',\r\n  });\r\n\r\n  /** @ngInject */\r\n  function HomeController($log) {\r\n    var vm = this;\r\n\r\n    // Scope variables go here:\r\n    // vm.variable = 'value';\r\n   \r\n  }\r\n\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n    angular.module('app')\r\n    .component('fileUpload', {\r\n        controller: FileUploadController,\r\n        controllerAs: 'vm',\r\n        templateUrl: 'app/file-upload/file-upload.view.html',\r\n    })\r\n    .controller(\"FileUploadController\", FileUploadController);\r\n    function FileUploadController(Upload,$window,$scope) {\r\n\r\n        var vm = this;\r\n        vm.submit = function () { //function to call on form submit\r\n            if (vm.file) { //check if from is valid\r\n                vm.upload1(vm.file); //call upload function\r\n            }\r\n        }\r\n\r\n        vm.upload1 = function (file) {\r\n            Upload.upload({\r\n                url: 'http://localhost:3000/upload', //webAPI exposed to upload the file\r\n                data: { file: file } //pass file as data, should be user ng-model\r\n            }).then(function (resp) { //upload function returns a promise\r\n                if (resp.data.error_code === 0) { //validate success\r\n                    $window.alert('Success ' + resp.config.data.file.name + 'uploaded. Response: ');\r\n                } else {\r\n                    $window.alert('an error occured');\r\n                }\r\n            }, function (resp) { //catch error\r\n                console.log('Error status: ' + resp.status);\r\n                $window.alert('Error status: ' + resp.status);\r\n            }, function (evt) {\r\n                console.log(evt);\r\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\r\n                vm.progress = 'progress: ' + progressPercentage + '% '; // capture upload progress\r\n            });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n        \r\n    })();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('app').component('classesList', {\r\n        controller: ClassListController,\r\n        controllerAs: 'vm',\r\n        templateUrl: 'app/classes-list/classes-list.view.html',\r\n    }).controller(\"ClassListController\", ClassListController);\r\n\r\n    /** @ngInject */\r\n    function ClassListController($state) {\r\n        var vm = this;\r\n\r\n        vm.classes = [{\r\n            secId: 101,\r\n            name: 'sec 1'\r\n        }, {\r\n            secId: 102,\r\n            name: 'sec 2'\r\n        },\r\n        {\r\n            secId: 103,\r\n            name: 'sec 3'\r\n        }\r\n            , {\r\n            secId: 104,\r\n            name: 'sec 4'\r\n        }, {\r\n            secId: 105,\r\n            name: 'sec 5'\r\n        }, {\r\n            secId: 106,\r\n            name: 'sec 6'\r\n        }, {\r\n            secId: 107,\r\n            name: 'sec 7'\r\n        }, {\r\n            secId: 108,\r\n            name: 'sec 8'\r\n        }, {\r\n            secId: 109,\r\n            name: 'sec 9'\r\n        }, {\r\n            secId: 110,\r\n            name: 'sec 10'\r\n        }\r\n            , {\r\n            secId: 110,\r\n            name: 'sec 10'\r\n        }, {\r\n            secId: 111,\r\n            name: 'sec 11'\r\n        }, {\r\n            secId: 112,\r\n            name: 'sec 12'\r\n        }, {\r\n            secId: 113,\r\n            name: 'sec 13'\r\n        }, {\r\n            secId: 114,\r\n            name: 'sec 14'\r\n        }, {\r\n            secId: 115,\r\n            name: 'sec 15'\r\n        }, {\r\n            secId: 116,\r\n            name: 'sec 16'\r\n        }, {\r\n            secId: 117,\r\n            name: 'sec 17'\r\n        }, {\r\n            secId: 118,\r\n            name: 'sec 18'\r\n        }, {\r\n            secId: 119,\r\n            name: 'sec 19'\r\n        }, {\r\n            secId: 120,\r\n            name: 'sec 20'\r\n        }, {\r\n            secId: 121,\r\n            name: 'sec 21'\r\n        }, {\r\n            secId: 122,\r\n            name: 'sec 22'\r\n        }\r\n        ];\r\n        vm.selectedClassId = null;\r\n\r\n        vm.getStudents = getStudents;\r\n        vm.$onInit = $onInit;\r\n\r\n\r\n        function $onInit() {\r\n            vm.selectedClassId = vm.classes[0].secId;\r\n            $state.go(\"app.classesList.studentsList\", {\r\n                classId: vm.classes[0].secId\r\n            });\r\n        }\r\n\r\n        function getStudents(secId) {\r\n            vm.selectedClassId = secId;\r\n            $state.go(\"app.classesList.studentsList\", {\r\n                classId: secId\r\n            });\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('app').component('appNav', {\r\n    controller: AppNavController,\r\n    controllerAs: 'vm',\r\n    templateUrl: 'app/app-nav/app-nav.view.html',\r\n  }).controller(\"AppNavController\", AppNavController);\r\n\r\n  /** @ngInject */\r\n  function AppNavController($log, $rootScope,$state) {\r\n    var vm = this;\r\n    vm.selectedNavIndex = 1;\r\n\r\n    vm.makeActvie = makeActvie;\r\n    vm.$onInit = $onInit;\r\n    function $onInit(){\r\n\r\n      vm.selectedNavIndex = 1;\r\n      $state.go('home');\r\n    }\r\n\r\n\r\n    function makeActvie(index, url) {\r\n      vm.selectedNavIndex = index;\r\n      $state.go(url);\r\n    }\r\n\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    /** @ngInject */\r\n\r\n    angular\r\n        .module('app')\r\n        .service('addStudentService', function ($http) {\r\n            this.addStudent = function (arg, callback) {\r\n                return $http.post('http://localhost:3000/studentsList/101', arg)\r\n                    .then(function (response) {\r\n                        // login successful if there's a token in the response\r\n                        if (response) {\r\n                           \r\n                           console.log(response.data);\r\n                         \r\n\r\n                            // execute callback with true to indicate successful login\r\n                            callback(true);\r\n\r\n                        } else {\r\n                            // execute callback with false to indicate failed login\r\n                            callback(false);\r\n\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        callback(false);\r\n                    });\r\n\r\n            }\r\n\r\n        });\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .component('addStudent', {\r\n            controller: addStudentController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'app/add-student/add-student.view.html',\r\n        })\r\n        .controller('addStudentController', addStudentController);\r\n\r\n    /** @ngInject */\r\n    function addStudentController($rootScope, $state,addStudentService) {\r\n        var vm = this;\r\n\r\n        // view model variables will go here\r\n        vm.error = null;\r\n        vm.depts=[\"cse\",\"civil\",\"mech\",\"eee\",\"ece\"];\r\n        //function hooks used in html \r\n        vm.clearError = clearError;\r\n        vm.addStudent = addStudnet;\r\n        vm.success=null;\r\n        vm.classes = [{\r\n            secId: 101,\r\n            name: 'sec 1'\r\n        }, {\r\n            secId: 102,\r\n            name: 'sec 2'\r\n        },\r\n        {\r\n            secId: 103,\r\n            name: 'sec 3'\r\n        }\r\n            , {\r\n            secId: 104,\r\n            name: 'sec 4'\r\n        }, {\r\n            secId: 105,\r\n            name: 'sec 5'\r\n        }, {\r\n            secId: 106,\r\n            name: 'sec 6'\r\n        }, {\r\n            secId: 107,\r\n            name: 'sec 7'\r\n        }, {\r\n            secId: 108,\r\n            name: 'sec 8'\r\n        }, {\r\n            secId: 109,\r\n            name: 'sec 9'\r\n        }, {\r\n            secId: 110,\r\n            name: 'sec 10'\r\n        }\r\n            , {\r\n            secId: 110,\r\n            name: 'sec 10'\r\n        }, {\r\n            secId: 111,\r\n            name: 'sec 11'\r\n        }, {\r\n            secId: 112,\r\n            name: 'sec 12'\r\n        }, {\r\n            secId: 113,\r\n            name: 'sec 13'\r\n        }, {\r\n            secId: 114,\r\n            name: 'sec 14'\r\n        }, {\r\n            secId: 115,\r\n            name: 'sec 15'\r\n        }, {\r\n            secId: 116,\r\n            name: 'sec 16'\r\n        }, {\r\n            secId: 117,\r\n            name: 'sec 17'\r\n        }, {\r\n            secId: 118,\r\n            name: 'sec 18'\r\n        }, {\r\n            secId: 119,\r\n            name: 'sec 19'\r\n        }, {\r\n            secId: 120,\r\n            name: 'sec 20'\r\n        }, {\r\n            secId: 121,\r\n            name: 'sec 21'\r\n        }, {\r\n            secId: 122,\r\n            name: 'sec 22'\r\n        }\r\n        ];\r\n        \r\n\r\n        //var internal use will go here\r\n\r\n        function addStudnet() {\r\n            var data={\r\n                \r\n                \"emergencyContact\":vm.EmegencyNumber,\r\n                \"firstName\" :vm.firstname,\r\n                \"secondName\" :vm.secondname,\r\n                \"department\" :vm.department ,\r\n                \"rollNumber\" :vm.rollnumber,\r\n                \"mailId\" : vm.email,\r\n                \"Contact\" :vm.contactnumber,\r\n                \"classId\":106\r\n            }\r\n            \r\n            console.log(data);\r\n            addStudentService.addStudent(data, function (result) {\r\n                if (result === true) {\r\n                    vm.success=true;\r\n                    \r\n                } else {\r\n                    // vm.error = 'Username or password is incorrect';\r\n                    //vm.loading = false;\r\n                    vm.error = \"something went Wrong Please try again\";\r\n                }\r\n            });\r\n\r\n            \r\n        }\r\n\r\n        function clearError(){\r\n            vm.error = null;\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app').run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock($document, $log, $rootScope, tmhDynamicLocale) {\r\n    \r\n    $rootScope.$on('$translateChangeSuccess', function(event, data) { // eslint-disable-line angular/on-watch\r\n      tmhDynamicLocale.set(data.language);\r\n      $document[0].documentElement.setAttribute('lang', data.language);\r\n    });\r\n\r\n    $log.debug('App run block end');\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('app').config(routerConfig);\r\n\r\n    /** @ngInject */\r\n    function routerConfig($stateProvider, $urlRouterProvider) {\r\n        /* $stateProvider\r\n       })*/\r\n\r\n        $stateProvider.state(\"login\", {\r\n            url: \"/login\",\r\n            component: 'login'\r\n        })\r\n        .state(\"userRegistration\",{\r\n            url:\"/userRegistration\",\r\n            component: 'userRegistration'\r\n           \r\n        })\r\n        .state(\"app\", {\r\n            url: \"/app\",\r\n            component: 'app'\r\n        })\r\n            .state(\"app.home\", {\r\n                url: \"/home\",\r\n                component: 'home'\r\n            })\r\n        .state(\"app.addStudent\",{\r\n            url:\"/addStudent\",\r\n            component: 'addStudent'\r\n        })\r\n       .state(\"app.classesList\",{\r\n            url:\"/classesList\",\r\n            component: 'classesList'\r\n        })\r\n        .state(\"app.classesList.studentsList\",{\r\n            url:\"/studentsList\",\r\n            component: 'studentsList',\r\n            params: {\r\n                classId: null\r\n            },\r\n        })\r\n        .state(\"app.classesList.fileUpload\",{\r\n            url:\"/fileUpload\",\r\n            component: 'fileUpload'\r\n        })\r\n        .state(\"app.reports\",{\r\n            url:\"/reports\",\r\n            component: 'reports'\r\n        })\r\n       \r\n        /*\r\n        .state(\"classDetails\",{\r\n            url:\"/classDetails\",\r\n            templateUrl:\"templates/classDetails.html\",\r\n            controller:\"classDeatails\"\r\n        })\r\n      .state(\"fileUpload\",{\r\n            url:\"/fileUpload\",\r\n            templateUrl:\"templates/fileUpload.html\",\r\n            controller:\"fileUpload\"\r\n        });\r\n        .state(\"classDetails.studentList\",{\r\n            url:\"/studentList\",\r\n            templateUrl:\"templates/studentList.html\",\r\n            controller:\"studentList\"\r\n        })\r\n        \r\n      */\r\n\r\n\r\n        $urlRouterProvider.otherwise('/login');\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app').\r\n      constant('SAMPLE_CONSTANT', 'Sample constant');\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app').config(configBlock);\r\n\r\n  /** @ngInject */\r\n  function configBlock($locationProvider, $logProvider, $translateProvider,\r\n                       tmhDynamicLocaleProvider) {\r\n    $locationProvider.\r\n        html5Mode(true);\r\n\r\n    $logProvider.\r\n        debugEnabled(true);\r\n\r\n    $translateProvider.\r\n        useStaticFilesLoader({\r\n          // Update `config.locales.directory` in `gulp/config.js` if change.\r\n          prefix: '/locales/',\r\n          suffix: '.json',\r\n        }).\r\n        preferredLanguage('en').\r\n        fallbackLanguage('en').\r\n        useSanitizeValueStrategy('escape').\r\n        useMissingTranslationHandlerLog();\r\n\r\n    tmhDynamicLocaleProvider.\r\n        // Angular locales pattern used by `buildAngularLocales()` in\r\n        // `gulp/locales.js`.\r\n        localeLocationPattern('/locales/angular-locale_{{locale}}.js').\r\n        defaultLocale('en');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('app').component('app', {\r\n      controller: AppController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'app/app.view.html',\r\n    }).controller(\"AppController\", AppController);\r\n  \r\n    /** @ngInject */\r\n    function AppController($log, $rootScope) {\r\n      var vm = this;\r\n  \r\n\r\n  \r\n    }\r\n  \r\n  })();\r\n  \nangular.module('app').run(['$templateCache', function($templateCache) {$templateCache.put('app/app.view.html','<div class=app-container><app-nav></app-nav><ui-view class=view-container></div>');\n$templateCache.put('app/add-student/add-student.view.html','<div class=student-register-page><div id=\"studentregister-form \" class=student-registration-container><div><h1>Student Registration</h1></div><p id=\"failure \">{{vm.error}}</p><p ng-if=vm.success></p><h2>Your message was sent successfully. Thank you!</h2><p></p><form name=\"addStudent1 \" ng-submit=\"vm.addStudent() \" class=student-register-form><div classs=\"label-container \"><label for=\"firstname \">FirstName: *</label></div><div class=input-container><input class=app-input type=\"text \" ng-model=\"vm.firstname \" id=\"firstname \" name=\"name\\r\\n    \" placeholder=\"Your Name \" required tabindex=1 autofocus></div><div classs=\"label-container \"><label for=\"name \" classs=\"label-container \">secondName: *</label></div><div class=input-container><input class=app-input type=\"text \" ng-model=\"vm.secondname \" id=\"secondname \" name=\"secondname\\r\\n    \" placeholder=\"Your Name \" required tabindex=1 autofocus></div><div classs=\"label-container \"><label for=\"rollnumber \" classs=\"label-container \">RollNo: *</label></div><div class=input-container><input class=app-input type=\"text \" id=\"rollnumber \" ng-model=\"vm.rollnumber \" name=\"rollnumber\\r\\n    \" placeholder=\"Your RollNo \" required tabindex=1 autofocus></div><div classs=\"label-container \"><label for=\"rollnumber \">Deparrment: *</label></div><div classs=\"label-container \"><label for=\"rollnumber \" classs=\"label-container \">RollNo: *</label></div><div class=input-container><input class=app-input type=\"text \" id=\"rollnumber \" ng-model=\"vm.rollnumber \" name=\"rollnumber\\r\\n    \" placeholder=\"Your RollNo \" required tabindex=1 autofocus></div><div classs=\"label-container \"><label for=\"rollnumber \">Deparrment: *</label></div><div class=input-select-container><select class=form-control ng-model=\"vm.department \"><option value=\" \" disabled selected>Please select department</option><option ng-repeat=\"dept in vm.depts \">{{dept}}</option></select></div><div classs=\"label-container \"><label for=\"rollnumber \">class: *</label></div><div class=input-select-container><select class=form-control ng-model=\"vm.department \"><option value=\" \" disabled selected>Please select department</option><option ng-repeat=\"dept in vm.classes \">{{dept.name}}</option></select></div><div class=label-container><label for=\"email \" classs=\"label-container \">Email: *</label></div><div class=input-container><input class=app-input type=\"email \" ng-model=vm.email id=\"email \" name=\"email \" placeholder=\"Your\\r\\n    Email \" tabindex=2 required></div><div class=label-container><label for=\"contactnumber \">ContactNumber: *</label></div><div class=input-container><input class=app-input type=\"number \" ng-model=vm.contactnumber id=\"contactnumber \" name=\"contactnumber\\r\\n    \" placeholder=\"Your Number \" tabindex=2 required></div><div class=label-container><label for=\"email \" classs=\"label-container \">EmegencyNumber: *</label></div><div class=input-container><input class=app-input type=\"number \" id=\"EmegencyNumber \" ng-model=vm.EmegencyNumber name=\"EmegencyNumber\\r\\n    \" placeholder=\"Your Number \" tabindex=2 required></div><div class=button-container><button name=\"submit \" type=\"submit \" id=\"submit \" class=app-button>SEND</button></div></form></div></div>');\n$templateCache.put('app/app-nav/app-nav.view.html','<div class=\"nav-bar layout-column\"><div class=logo-container></div><ul class=flex><li ng-class=\"{\\'active\\': vm.selectedNavIndex == 1}\"><a ui-sref=app.home ng-click=vm.makeActvie(1,app.home)><i class=material-icons>home</i></a></li><!-- <li>\\r\\n                <a ui-sref=\"app.addStudent\">\\r\\n                    addStudent\\r\\n                </a>\\r\\n            </li> --><li ng-class=\"{\\'active\\': vm.selectedNavIndex == 2}\"><a ng-click=\"vm.makeActvie(2, \\'app.classesList\\')\"><i class=material-icons>people</i></a></li><li ng-class=\"{\\'active\\': vm.selectedNavIndex == 3}\"><a ng-click=\"vm.makeActvie(3,\\'app.classesList.fileUpload\\')\"><i class=material-icons>file_upload</i></a></li><li ng-class=\"{\\'active\\': vm.selectedNavIndex == 4}\"><a ui-sref=app.reports ng-click=vm.makeActvie(4)><i class=material-icons>assessment</i></a></li><li ng-class=\"{\\'active\\': vm.selectedNavIndex == 5}\"><a ui-sref=app.addStudent ng-click=vm.makeActvie(5)><i class=material-icons>person_add</i></a></li></ul><ul class=flex-auto><li><a ui-sref=login><i class=material-icons>exit_to_app</i></a></li></ul></div>');\n$templateCache.put('app/classes-list/classes-list.view.html','<div class=class-list-container><div class=class-list><ul><li style=font-style:Audrey;>CLASSES</li><li ng-repeat=\"class in vm.classes\" ng-class=\"{\\'active\\': vm.selectedClassId == class.secId}\" ng-click=vm.getStudents(class.secId)>{{class.name}}</li></ul></div><div class=view-container ui-view></div></div>');\n$templateCache.put('app/file-upload/file-upload.view.html','<div class=file-upload-container><h1>Angular Node File Upload</h1><form name=up.upload_form>file Upload <input type=file ngf-select ng-model=vm.file name=file required> <i ng-show=up.upload_form.file.$error.required>*required</i><br><button type=submit ng-click=vm.submit()>submit</button><p>{{vm.progress}}</p></form></div>');\n$templateCache.put('app/home/home.view.html','<div class=home-container></div>');\n$templateCache.put('app/login/login.view.html','<div class=login-page ng-controller=LoginController><h1 style=\"color: #FFFFFF\" align=center>Login</h1><div class=login-container><div class=login-error><h4 ng-if=vm.error style=\"color: red\">{{vm.error}}</h4></div><form name=loginForm ng-submit=vm.login(loginForm) class=login-form><div class=label-container><label>UserName</label></div><div class=input-container><input type=text placeholder=Username ng-change=vm.clearError() class=app-input id=username ng-model=vm.Uname required><div ng-if=\"loginForm.Uname.$dirty && loginForm.Unamee.$error.required\" class=help-block>Username is required</div></div><div class=label-container><label>Password</label></div><div class=input-container><input type=password placeholder=password class=app-input ng-change=vm.clearError() id=password ng-model=vm.Upwd required><div ng-if=\"loginForm.Upwd.$dirty && loginForm.Upwd.$error.required\" class=help-block>Password is required</div></div><div class=button-container><button type=submit class=app-button>Sign in</button></div><div class=forgot-password-container><a ui-sref=userRegistration class=forgot>Sign Up?</a> or <a href=# class=forgot>forgot password?</a></div></form></div></div>');\n$templateCache.put('app/reports/reports.view.html','<div class=reports-container><form name=reports-Form ng-submit=vm.getReport(reports-form) class=reports-form><div class=input-container><div class=input-error><h4 ng-if=vm.error style=\"color: red\">{{vm.error}}</h4></div><div class=label-container><label>RollNumber</label></div><div class=input-container><input type=text placeholder=RollNumber ng-change=vm.clearError() class=app-input id=rollnumber ng-model=vm.rollnumber required><div ng-if=\"reports-form.rollnumber.$dirty && reports-form.rollnumber.$error.required\" class=help-block>RollNumber is required</div></div></div><div class=button-container><button type=submit class=app-button>GET DATA</button></div></form><div class=table-comtainer ng-if=vm.tableData><table><tr><th>subject</th><th>totalNumberOfclasses</th><th>attendedclasses</th><th>Percentage</th></tr><tr ng-repeat=\"sub in vm.report\"><td>{{sub.subject}}</td><td>{{sub.totalNumberOfclasses}}</td><td>{{sub.attendedclasses}}</td><td>{{sub.attendedclasses/sub.totalNumberOfclasses *100}}</td></tr></table></div></div>');\n$templateCache.put('app/students-list/students-list.view.html','<div class=student-list-container><div ng-if=vm.success><h2>Attendance has bess taken successfully</h2></div><form name=studentListForm ng-submit=vm.formSub() ng-if=\" vm.studentListForm\"><div class=table-container-header><table><thead><tr><th>select</th><th>RollNumber</th><th>FirstName</th><th>SecondName</th></tr></thead></table></div><div class=error-container ng-if=vm.error><h3>there are no students to view</h3></div><div class=table-container><table><tbody><tr ng-repeat=\"student in vm.result\" ng-class=\"{\\'active\\': vm.selectedStudentId == class.rollNmber}\"><td><input type=checkbox checklist-model=vm.selectedUsers checklist-value=student.rollNumber ng-click=vm.getSelectedStudents(student.rollNumber)></td><td>{{student.rollNumber}}</td><td>{{student.firstName}}</td><td>{{student.secondName}}</td></tr></tbody></table></div><div class=textarea-container><textarea class=app-textarea ng-model=vm.message placeholder=\"Enter your message\" rows=4 cols=50 required></textarea> <button type=submit class=app-button>Submit</button></div></form></div>');\n$templateCache.put('app/user-registration/user-registration.view.html','<div class=user-registration-page><h1 style=\"color: #FFFFFF\" align=center>User Registration</h1><div class=user-registration-container><form name=registrationForm ng-submit=vm.userRegistration(loginForm) class=user-registration-form method=post><div class=login-error><h4 ng-if=vm.error style=\"color: red\">{{vm.error}}</h4></div><div class=label-container><label>Fullname</label></div><div class=input-container><input type=text placeholder=Fullname class=app-input ng-change=vm.clearError() ng-model=vm.fullName required><div ng-if=\"registrationForm.Fullname.$dirty && registrationForm.Fullname.$error.required\" class=help-block>Fullname is required</div></div><div class=label-container><label for=email classs=label-container>Email: *</label></div><div class=input-container><input class=app-input type=email class=app-input ng-model=vm.email name=email placeholder=\"Your Email\" tabindex=2 required></div><div class=label-container><label>Password</label></div><div class=input-container><input type=password placeholder=password class=app-input ng-change=vm.clearError() id=password ng-model=vm.Upwd required><div ng-if=\"registrationForm.Upwd.$dirty && registrationForm.Upwd.$error.required\" class=help-block>Password is required</div></div><div class=button-container><button type=submit class=app-button>Sign Up</button></div><div class=forgot-password-container><a ui-sref=login class=forgot>Sign In?</a></div></form></div></div>');}]);"]}